#!/bin/bash --login
#SBATCH --time=23:59:00
#SBATCH --nodes=1
#SBATCH --ntasks=1
#SBATCH --cpus-per-task=1
#SBATCH --mem-per-cpu=1g
#SBATCH --job-name (<EXP_NAME>)
#SBATCH --array=1-768
#SBATCH --output=(<SCRATCH_SLURM_OUT_DIR>)/slurm-%A_%a.out

# Variables used in replays
MAIN_REP_ID=(<REP_ID>)
REPLAY_GEN=${SLURM_ARRAY_TASK_ID}

IS_MOCK=0
LOAD_MODULES=1
while getopts "ml" opt; do
  case $opt in
    m)
     IS_MOCK=1
      ;;
    l)
     LOAD_MODULES=0
      ;;
    \?)
      echo "Invalid option: -$OPTARG" >&2
      ;;
  esac
done


# If this is a mocked job 
if [ ${IS_MOCK} -gt 0 ]
then
  if [ -z "${SLURM_ARRAY_TASK_ID}" ]
  then
    SLURM_ARRAY_TASK_ID=1
    echo "SLURM_ARRAY_TASK_ID not defined, setting to ${SLURM_ARRAY_TASK_ID}"
  fi
fi

# Load the necessary modules
if [ ${LOAD_MODULES} -gt 0 ]
then
  module purge
  module load GCC/11.2.0
  module load OpenMPI/4.1.1
  module load R/4.1.2
fi

# Variables, defined by launch script 
EXP_NAME=(<EXP_NAME>)
SCRATCH_EXP_DIR=(<SCRATCH_EXP_DIR>)
SCRATCH_FILE_DIR=(<SCRATCH_FILE_DIR>)

# Use these variables to create a few helper variables
ZERO_PADDED_MAIN_ID=$( ${SCRATCH_FILE_DIR}/zero_pad.sh ${MAIN_REP_ID} 3 )
SCRATCH_JOB_DIR=${SCRATCH_EXP_DIR}/reps/${ZERO_PADDED_MAIN_ID}
# Load global helper functions
. ${SCRATCH_FILE_DIR}/helper_functions.sh

# Calculate the replicate's seed
SEED_BASE=$( exp_name_to_seed ${EXP_NAME} )
SEED=$(( ${SEED_BASE} + (${SLURM_ARRAY_TASK_ID} * 30000) ))
echo "Random seed: ${SEED}; Replicate ID: ${SLURM_ARRAY_TASK_ID};"
echo "Seed to be replayed: ${MAIN_REP_ID}; Replay gen: ${REPLAY_GEN}"

# Create replicate-specific directories
SCRATCH_REPLAY_DIR=${SCRATCH_JOB_DIR}/selected_replays/${REPLAY_GEN}
mkdir -p ${SCRATCH_REPLAY_DIR}
cd ${SCRATCH_REPLAY_DIR}
echo "SCRATCH_REPLAY_DIR: ${SCRATCH_REPLAY_DIR}"

# Create bookkeeping file
CROSS_INFO_FILE=cross_info.csv
echo "slurm_task_id,trial_id,replay_gen,relative_update,cross_counter" > ${CROSS_INFO_FILE}

######## MAIN ########
NUM_TRIALS=10000
for TRIAL_ID in $( seq 1 ${NUM_TRIALS} )
do
    TRIAL_SEED=$(( ${SEED} + ( ${TRIAL_ID} * ${SEED_BASE} ) ))
    echo "Starting trial! #${TRIAL_ID}"
    # Run!
    RESULT=$( time ${SCRATCH_FILE_DIR}/MABE \
        -f ${SCRATCH_FILE_DIR}/shared_config.mabe ${SCRATCH_FILE_DIR}/replay_evolution.mabe \
        -s random_seed=${TRIAL_SEED} \
        -s replay_gen=${REPLAY_GEN} )
    CROSS_COUNTER=1
    for RELATIVE_UPDATE in $(echo "${RESULT}" | grep -e "Cross" | grep -oP "\d+$")
    do
        echo "${SLURM_ARRAY_TASK_ID},${TRIAL_ID},${REPLAY_GEN},${RELATIVE_UPDATE},${CROSS_COUNTER}" >> ${CROSS_INFO_FILE}
        CROSS_COUNTER=$(( ${CROSS_COUNTER} + 1 ))
    done
done

# Print slurm info if this is not a mock job
if [ ${IS_MOCK} -eq 0 ]
then
  scontrol show job $SLURM_JOB_ID
fi
